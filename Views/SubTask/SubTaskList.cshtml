@* @model List<Task_Management.Models.SubTaskModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SubTask List</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="@Url.Content("~/css/site.css")" />

    <style>
        .overdue {
            color: red !important;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container mt-5 p-4 rounded">
        <h1 class="text-center mb-4">SubTask List</h1>
        <div class="d-flex justify-content-end mb-3">
            <a asp-controller="SubTask" asp-action="AddEditSubTask" class="btn btn-primary me-2">
                <i class="bi bi-plus"></i> Add
            </a>
           
            <a asp-controller="CompleteSubTask" asp-action="CompleteSubTaskList" class="btn btn-success">
                Complete Sub Task
            </a>
        </div>

        @if (TempData["Message"] != null)
        {
            <div id="message-alert" class="alert alert-success" role="alert">
                @TempData["Message"]
            </div>
        }

        @if (Model != null && Model.Count > 0)
        {
            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Due Date</th>
                            <th>Priority</th>
                            <th>Created At</th>
                            <th>Updated At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var subTask in Model)
                        {
                            var isOverdue = subTask.DueDate.HasValue && subTask.DueDate.Value < DateTime.Now;
                            <tr>
                                <td>@subTask.Title</td>
                                <td>@subTask.Description</td>
                                <td class="@(isOverdue ? "overdue" : "")">
                                    @subTask.DueDate?.ToString("dd-MM-yyyy")
                                </td>
                                <td>
                                    @(subTask.Priority == 0 ? "Low" : subTask.Priority == 1 ? "Medium" : subTask.Priority == 2 ? "High" : "Unknown")
                                </td>
                                <td>@subTask.CreatedAt.ToString("dd-MM-yyyy")</td>
                                <td>@subTask.UpdatedAt?.ToString("dd-MM-yyyy")</td>
                                <td>
                                    <a asp-controller="SubTask" asp-action="AddEditSubTask" asp-route-id="@subTask.SubTaskId" class="btn btn-warning btn-sm me-1">
                                        <i class="bi bi-pencil"></i> Edit
                                    </a>
                                    <button onclick="deleteSubTask(@subTask.SubTaskId, @subTask.MainTaskId)"
                                            class="btn btn-danger btn-sm me-1">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                    <form method="post" asp-action="CompleteSubTask" asp-controller="SubTask" asp-route-id="@subTask.SubTaskId" class="d-inline" onsubmit="return confirm('Are you sure you want to mark this subtask as completed?');">
                                        <button type="submit" class="btn btn-success btn-sm">
                                            <i class="bi bi-check"></i> Complete
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-warning mt-4" role="alert">
                No subtasks found.
            </div>
        }
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const alertBox = document.getElementById("message-alert");
            if (alertBox) {
                setTimeout(() => {
                    alertBox.style.display = "none";
                }, 2000);
            }
        });

        function deleteSubTask(subTaskId, mainTaskId) {
            if (confirm("Are you sure you want to delete this subtask?")) {
                window.location.href = `/SubTask/DeleteSubTask?subTaskId=${subTaskId}&mainTaskId=${mainTaskId}`;
            }
        }
    </script>
</body>
</html> *@

@model List<Task_Management.Models.SubTaskModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SubTask List</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="@Url.Content("~/css/site.css")" />

    <style>
        .overdue {
            color: red !important;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container mt-5 p-4 rounded">
        <h1 class="text-center mb-4">SubTask List</h1>
        <div class="d-flex justify-content-between mb-3">
            <div>
                <label for="priorityFilter" class="form-label">Filter by Priority:</label>
                <select id="priorityFilter" class="form-select" onchange="filterByPriority()">
                    <option value="">All</option>
                    <option value="0">Low</option>
                    <option value="1">Medium</option>
                    <option value="2">High</option>
                </select>
            </div>
            <div>
                <a asp-controller="SubTask" asp-action="AddEditSubTask" class="btn btn-primary me-2">
                    <i class="bi bi-plus"></i> Add
                </a>
                <a asp-controller="ToDoList" asp-action="TaskList" class="btn btn-primary me-2">
                    Go To All Tasks
                </a>
                <a asp-controller="CompleteSubTask" asp-action="CompleteSubTaskList" class="btn btn-success">
                    Complete Sub Task
                </a>
            </div>
        </div>

        @if (TempData["Message"] != null)
        {
            <div id="message-alert" class="alert alert-success" role="alert">
                @TempData["Message"]
            </div>
        }

        @if (Model != null && Model.Count > 0)
        {
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="subTaskTable">
                    <thead class="table-dark">
                        <tr>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Due Date</th>
                            <th>Priority</th>
                            <th>Created At</th>
                            <th>Updated At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var subTask in Model)
                        {
                            var isOverdue = subTask.DueDate.HasValue && subTask.DueDate.Value < DateTime.Now;
                            <tr data-priority="@subTask.Priority">
                                <td>@subTask.Title</td>
                                <td>@subTask.Description</td>
                                <td class="@(isOverdue ? "overdue" : "")">
                                    @subTask.DueDate?.ToString("dd-MM-yyyy")
                                </td>
                                <td>
                                    @(subTask.Priority == 0 ? "Low" : subTask.Priority == 1 ? "Medium" : subTask.Priority == 2 ? "High" : "Unknown")
                                </td>
                                <td>@subTask.CreatedAt.ToString("dd-MM-yyyy")</td>
                                <td>@subTask.UpdatedAt?.ToString("dd-MM-yyyy")</td>
                                <td>
                                    <a asp-controller="SubTask" asp-action="AddEditSubTask" asp-route-id="@subTask.SubTaskId" class="btn btn-warning btn-sm me-1">
                                        <i class="bi bi-pencil"></i> Edit
                                    </a>
                                    @* <button onclick="deleteSubTask(@subTask.SubTaskId, @subTask.MainTaskId)"
                            class="btn btn-danger btn-sm me-1">
                            <i class="bi bi-trash"></i> Delete
                            </button> *@

                                    <button type="button" class="btn btn-danger btn-sm me-1" onclick="confirmDelete(@subTask.SubTaskId, @subTask.MainTaskId)">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>

                                    @*  <form method="post" asp-action="CompleteSubTask" asp-controller="SubTask" asp-route-id="@subTask.SubTaskId" class="d-inline" onsubmit="return confirm('Are you sure you want to mark this subtask as completed?');">
                            <button type="submit" class="btn btn-success btn-sm">
                            <i class="bi bi-check"></i> Complete
                            </button>
                            </form> *@

                                    <form id="complete-form-@subTask.SubTaskId" method="post" asp-action="CompleteSubTask" asp-controller="SubTask" asp-route-id="@subTask.SubTaskId" class="d-inline">
                                        <button type="button" class="btn btn-success btn-sm" onclick="confirmComplete(@subTask.SubTaskId)">
                                            <i class="bi bi-check"></i> Complete
                                        </button>
                                    </form>

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-warning mt-4" role="alert">
                No subtasks found.
            </div>
        }
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const alertBox = document.getElementById("message-alert");
            if (alertBox) {
                setTimeout(() => {
                    alertBox.style.display = "none";
                }, 2000);
            }
        });

        function filterByPriority() {
            const selectedPriority = document.getElementById('priorityFilter').value;
            const rows = document.querySelectorAll('#subTaskTable tbody tr');

            rows.forEach(row => {
                const rowPriority = row.getAttribute('data-priority');
                if (selectedPriority === "" || rowPriority === selectedPriority) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }
    </script>
    <script>
        // delete button
        function confirmDelete(subTaskId, mainTaskId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to delete this subtask?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = `/SubTask/DeleteSubTask?subTaskId=${subTaskId}&mainTaskId=${mainTaskId}`;
                }
            });
        }
    </script>
    <script>
        // Complete button
        function confirmComplete(subTaskId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to mark this subtask as completed?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#28a745',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, complete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById('complete-form-' + subTaskId).submit();
                }
            });
        }
    </script>

</body>
</html>

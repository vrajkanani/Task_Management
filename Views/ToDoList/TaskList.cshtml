@* @model List<Task_Management.Models.ToDoListModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Manager</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="@Url.Content("~/css/site.css")" />

    <style>
        .overdue {
            color: red !important;
            font-weight: bold;
        }
    </style>

</head>
<body>
    <div class="container mt-5 p-4 rounded">
        <h1 class="text-center mb-4">Task List</h1>
        <div class="d-flex justify-content-end mb-3">
            <a asp-controller="ToDoList" asp-action="AddEditTask" class="btn btn-primary me-2">
                <i class="bi bi-plus"></i> Add
            </a>
            <a asp-controller="CompletedTask" asp-action="CompletedTaskList" class="btn btn-success">
                Go To Completed Tasks
            </a>
        </div>

        @if (TempData["Message"] != null)
        {
            <div id="message-alert" class="alert alert-success" role="alert">
                @TempData["Message"]
            </div>
        }

        @if (Model != null && Model.Count > 0)
        {
            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Due Date</th>
                            <th>Priority</th>
                            <th>Created At</th>
                            <th>Updated At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var task in Model)
                        {
                            var isOverdue = task.DueDate.HasValue && task.DueDate.Value < DateTime.Now;
                            <tr>
                                <td>@task.Title</td>
                                <td>@task.Description</td>
                                <td class="@(isOverdue ? "overdue" : "")">
                                    @task.DueDate?.ToString("dd-MM-yyyy")
                                </td>
                                <td>
                                    @(task.Priority == 0 ? "Low" : task.Priority == 1 ? "Medium" : task.Priority == 2 ? "High" : "Unknown")
                                </td>
                                <td>@task.CreatedAt.ToString("dd-MM-yyyy")</td>
                                <td>@task.UpdatedAt?.ToString("dd-MM-yyyy")</td>
                                <td>
                                    <a asp-controller="ToDoList" asp-action="AddEditTask" asp-route-id="@task.Id" class="btn btn-warning btn-sm me-1">
                                        <i class="bi bi-pencil"></i> Edit
                                    </a>
                                    <form method="post" asp-action="Delete" asp-controller="ToDoList" asp-route-Id="@task.Id" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this task?');">
                                        <button type="submit" class="btn btn-danger btn-sm me-1">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </form>
                                    <form method="post" asp-action="Complete" asp-controller="ToDoList" asp-route-id="@task.Id" class="d-inline" onsubmit="return confirm('Are you sure you want to mark this task as completed?');">
                                        <button type="submit" class="btn btn-success btn-sm">
                                            <i class="bi bi-check"></i> Complete
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>


                </table>
            </div>
        }
        else
        {
            <div class="alert alert-warning neu-brutal mt-4" role="alert">
                No tasks found.
            </div>
        }
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const alertBox = document.getElementById("message-alert");
            if (alertBox) {
                setTimeout(() => {
                    alertBox.style.display = "none";
                }, 2000);
            }
        });
    </script>
</body>
</html>
 *@


@model List<Task_Management.Models.ToDoListModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Manager</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .overdue {
            color: red !important;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container mt-5 p-4 rounded">
        <h1 class="text-center mb-4">Task List</h1>
        <div class="d-flex justify-content-between mb-3">
            <div>
                <label for="priorityFilter" class="form-label me-2">Filter by Priority:</label>
                <select id="priorityFilter" class="form-select d-inline-block w-auto">
                    <option value="All">All</option>
                    <option value="Low">Low</option>
                    <option value="Medium">Medium</option>
                    <option value="High">High</option>
                </select>
            </div>
            <div>
                <a asp-controller="ToDoList" asp-action="AddEditTask" class="btn btn-primary me-2">
                    <i class="bi bi-plus"></i> Add
                </a>
                <a asp-controller="CompletedTask" asp-action="CompletedTaskList" class="btn btn-success">
                    Go To Completed Tasks
                </a>
            </div>
        </div>

        @if (TempData["Message"] != null)
        {
            <div id="message-alert" class="alert alert-success" role="alert">
                @TempData["Message"]
            </div>
        }

        @if (Model != null && Model.Count > 0)
        {
            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Due Date</th>
                            <th>Priority</th>
                            <th>SubTask</th>
                            <th>Created At</th>
                            <th>Updated At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="taskTableBody">
                        @foreach (var task in Model)
                        {
                            var isOverdue = task.DueDate.HasValue && task.DueDate.Value < DateTime.Now;
                            var priorityText = task.Priority == 0 ? "Low" : task.Priority == 1 ? "Medium" : task.Priority == 2 ? "High" : "Unknown";
                            <tr data-priority="@priorityText">
                                <td>@task.Title</td>
                                <td>@task.Description</td>
                                <td class="@(isOverdue ? "overdue" : "")">
                                    @task.DueDate?.ToString("dd-MM-yyyy")
                                </td>
                                <td>@priorityText</td>
                                <td style="padding: 10px;">
                                    <a asp-controller="SubTask" asp-action="SubTaskList" asp-route-Id="@task.Id"
                                       style="color: #007bff; text-decoration: none; font-weight: bold;">
                                        @task.SubTaskCount
                                    </a>
                                </td>
                                <td>@task.CreatedAt.ToString("dd-MM-yyyy")</td>
                                <td>@task.UpdatedAt?.ToString("dd-MM-yyyy")</td>
                                <td>
                                    <a asp-controller="ToDoList" asp-action="AddEditTask" asp-route-id="@task.Id" class="btn btn-warning btn-sm me-1">
                                        <i class="bi bi-pencil"></i> Edit
                                    </a>
                                    <form id="delete-form-@task.Id" method="post" asp-action="Delete" asp-controller="ToDoList" asp-route-Id="@task.Id" class="d-inline">
                                        <button type="button" class="btn btn-danger btn-sm me-1" onclick="confirmDelete(@task.Id)">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </form>
                                    
                                    <form id="complete-form-@task.Id" method="post" asp-action="Complete" asp-controller="ToDoList" asp-route-id="@task.Id" class="d-inline">
                                        <button type="button" class="btn btn-success btn-sm" onclick="confirmComplete(@task.Id)">
                                            <i class="bi bi-check"></i> Complete
                                        </button>
                                    </form>

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-warning neu-brutal mt-4" role="alert">
                No tasks found.
            </div>
        }
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const alertBox = document.getElementById("message-alert");
            if (alertBox) {
                setTimeout(() => {
                    alertBox.style.display = "none";
                }, 2000);
            }

            const priorityFilter = document.getElementById("priorityFilter");
            const taskTableBody = document.getElementById("taskTableBody");
            const rows = taskTableBody.getElementsByTagName("tr");

            priorityFilter.addEventListener("change", function () {
                const selectedPriority = this.value;
                for (let i = 0; i < rows.length; i++) {
                    const row = rows[i];
                    const taskPriority = row.getAttribute("data-priority");
                    if (selectedPriority === "All" || taskPriority === selectedPriority) {
                        row.style.display = "";
                    } else {
                        row.style.display = "none";
                    }
                }
            });
        });
    </script>
    <script>
        // delete button
        function confirmDelete(taskId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Once deleted, you will not be able to recover this task!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById('delete-form-' + taskId).submit();
                }
            });
        }
    </script>
    <script>
        // compelete button
        function confirmComplete(taskId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to mark this task as completed?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#28a745',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, complete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById('complete-form-' + taskId).submit();
                }
            });
        }
    </script>

</body>
</html>
